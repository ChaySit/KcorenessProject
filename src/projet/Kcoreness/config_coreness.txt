#Seed is used in order to replicate the experiment result based on a pseudo random behaviour
random.seed 1234567890

#Number of cycle
simulation.cycles 4

#Nodes will be visited in a shuffle order
control.shf Shuffle

#Number of nodes
network.size 25


#To show execution time
__t


################### Protocols used ###################

protocol.lnk NeighborsProtocol

protocol.core KcorenessFunction
protocol.core.linkable lnk

################### Initializers ###################

### To load a graph toplogy from graphml
### To use it change GRAPHML_READING_PATH in peersim.graph.GraphIO first 
#init.wire WireImporter

init.wire WireGrid
init.wire.protocol lnk

### To load coreness from graphml
### To use it change GRAPHML_READING_PATH in project.Kcoreness.KcorenessGraphmlInitializer
#init.initial KcorenessGraphmlInitializer

init.initial KcorenessInitializer
init.initial.protocol core
init.initial.linkable lnk

include.init wire initial


################### Controls ######################

### To save results as graphml 
### To use it change GRAPHML_WRITING_PATH in projet.Kcoreness.KcorenessGraphmlObserver first
#control.obs KcorenessGraphmlObserver

control.obs KcorenessObserver
control.obs.protocol core
control.obs.linkable lnk


#Specifies whether to add or remove 
#dynamics.flag add will add a node in every cycle
#dynamics.flag remove will remove the node with the specified id (one node by simulation)

newnode NewNodeInitializer
newnode.protocol core
newnode.linkable lnk
newnode.degree 2

control.dnet Dynamics
control.dnet.flag addNodes

# number of nodes to add 
control.dnet.add 1
#control.dnet.idremoved 5
control.dnet.protocol core
control.dnet.linkable lnk
#control.dnet.from 0
#control.dnet.until 1
